PADRÃO CRIACIONAL -- FACTORY METHOD

INTENÇÃO: 
  O Factory Method é um Design Pattern que provê uma interface para criar objetos
em uma super classe, mas permite que subclasses alterem o tipo de objetos que
serão criados.

EXPLICAÇÃO: 
  O Factory Method sugere que o código cliente não deve instanciar diretamente
um objeto, utilizando New. Os objetos serão criados com New, mas serão chamados
dentro de um Factory Method. Os objetos retornados por um Factory Method são
normalmente chamados de Produtos.
  A primeira vista, isso parece inútil, porém, agora podemos sobrescrever o
Factory Method em uma subclasse e alterar a classe de produtos criadas pelo
metódo.
  A limitação é que subclasses podem retornar diferentes tipos de produtos
somente se tiverem uma classe ou interface em comum. Além disso, o Factory Method
na classe base deve ter seu tipo de retorno declarado na interface.
  O código que usa um Factory Method não vê uma diferença entre os produtos retornados
por diferentes subclasses. O cliente trata todos eles como o tipo da interface "pai""
que os engloba.
  O Factory method dá flexibilidade ao código cliente permitindo a criação de novas
factories sem a necessidade de alterar o código já existe (OCP).

APLICABILIDADE: 
  Usar quando não sabemos exatamente os tipos e dependências dos objetos do nosso
código.
  Usar quando queremos prover aos usuários de uma biblioteca ou um framework a
possilidade de extender nossos componentes internos.
  Usar quando queremos salvar recursos do sistema reutilizando objetos invés de
recriá-los todas as vezes.

CONSEQUÊNCIAS:
PROS:
  Ajuda a aplicar o OCP.
  Ajuda a aplicar o SRP.
  Ajuda no desacoplamento do código.
CONTRAS:
  Se utilizado sem necessidade, teremos uma explosão de subclasses,
pois eteremos uma clase ConcreteCreator para cada ConcreteProduct.